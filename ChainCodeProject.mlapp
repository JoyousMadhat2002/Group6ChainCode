classdef ChainCodeProject < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                 matlab.ui.Figure
        SaveChainCodeButton      matlab.ui.control.Button
        ExtractChainCodeButton   matlab.ui.control.Button
        ExtractFeaturesButton    matlab.ui.control.Button
        LoadImageButton          matlab.ui.control.Button
        ChainCodeEditField       matlab.ui.control.EditField
        ChainCodeEditFieldLabel  matlab.ui.control.Label
        UIAxes2                  matlab.ui.control.UIAxes
        UIAxes                   matlab.ui.control.UIAxes
    end

    
    properties (Access = public)
        OriginalImage           % store the loaded image
        Features                % store features extracted
        ChainCode               % store the chain code extracted
        plotChainCode           % plot the chain code that was extracted
    end
    

    % Callbacks that handle component events
    methods (Access = private)

        % Button pushed function: LoadImageButton
        function LoadImageButtonPushed(app, event)
            [file, path] = uigetfile({'*.jpg;*.png;*.bmp', 'Image Files'}); 
            if isequal(file, 0)
                uialert(app.UIFigure, 'No file selected', 'Load Error');
            else
                app.OriginalImage = imread(fullfile(path, file));
                imshow(app.OriginalImage, 'Parent', app.UIAxes);  % Assuming you are using UIAxes to show the original image
                uialert(app.UIFigure, 'Image loaded successfully', 'Success');
            end
        end

        % Button pushed function: ExtractFeaturesButton
        function ExtractFeaturesButtonPushed(app, event)
                 if isempty(app.OriginalImage)
                    uialert(app.UIFigure, 'Load an image first.', 'Error');
                else
                    % Preprocess the image first
                    preprocessedImage = preprocessing(app.OriginalImage);
                    % Ensure the preprocessedImage is correctly formatted for the next step
                    if ~isempty(preprocessedImage)
                        % Extract features from the preprocessed image
                        app.Features = extractFeatures(preprocessedImage);
                        imshow(app.Features, 'Parent', app.UIAxes2);  % Display features
                        uialert(app.UIFigure, 'Features extracted successfully', 'Success');
                    else
                        uialert(app.UIFigure, 'Preprocessing failed.', 'Error');
                    end
                 end
        end

        % Button pushed function: ExtractChainCodeButton
        function ExtractChainCodeButtonPushed(app, event)
            if isempty(app.Features)
                uialert(app.UIFigure, 'Extract features first.', 'Error');
                return;  % Exit if no features extracted
            end
        
            % Generate the chain code from the extracted features
            app.ChainCode = generateChainCode(app.Features);
        
            % Check if chain code was successfully generated
            if isempty(app.ChainCode)
                uialert(app.UIFigure, 'Chain code generation failed.', 'Error');
            else
                % Display chain code in the edit field for viewing
                app.ChainCodeEditField.Value = num2str(app.ChainCode);
                uialert(app.UIFigure, 'Chain code extracted successfully.', 'Success');
            end
        end

        % Button pushed function: SaveChainCodeButton
        function SaveChainCodeButtonPushed(app, event)
                % Check if the chain code has been generated
                if isempty(app.ChainCode)
                    uialert(app.UIFigure, 'Generate chain code first.', 'Error');
                    return; % Exit if no chain code
                end
            
                % Open file save dialog box
                [file, path] = uiputfile('*.txt', 'Save Chain Code As');
                if isequal(file, 0)
                    uialert(app.UIFigure, 'Saving cancelled.', 'Cancelled');
                    return; % Exit if user cancels the save operation
                end
            
                % Open the file for writing text
                fid = fopen(fullfile(path, file), 'wt');
                if fid == -1
                    uialert(app.UIFigure, 'Failed to open file for writing.', 'Error');
                    return; % Exit if file cannot be opened
                end
            
                % Write the chain code to the file
                if isnumeric(app.ChainCode)
                    fprintf(fid, '%d ', app.ChainCode); % Saving numeric array as space-separated values
                else
                    fprintf(fid, '%s', app.ChainCode); % Assuming it's a string and can be directly written
                end
            
                % Close the file
                fclose(fid);
                
                % Notify the user of success
                uialert(app.UIFigure, 'Chain code saved successfully.', 'Success');
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Position = [100 100 640 480];
            app.UIFigure.Name = 'MATLAB App';

            % Create UIAxes
            app.UIAxes = uiaxes(app.UIFigure);
            title(app.UIAxes, 'Title')
            xlabel(app.UIAxes, 'X')
            ylabel(app.UIAxes, 'Y')
            zlabel(app.UIAxes, 'Z')
            app.UIAxes.Position = [16 135 300 185];

            % Create UIAxes2
            app.UIAxes2 = uiaxes(app.UIFigure);
            title(app.UIAxes2, 'Title')
            xlabel(app.UIAxes2, 'X')
            ylabel(app.UIAxes2, 'Y')
            zlabel(app.UIAxes2, 'Z')
            app.UIAxes2.Position = [333 141 288 173];

            % Create ChainCodeEditFieldLabel
            app.ChainCodeEditFieldLabel = uilabel(app.UIFigure);
            app.ChainCodeEditFieldLabel.HorizontalAlignment = 'right';
            app.ChainCodeEditFieldLabel.Position = [382 331 65 22];
            app.ChainCodeEditFieldLabel.Text = 'ChainCode';

            % Create ChainCodeEditField
            app.ChainCodeEditField = uieditfield(app.UIFigure, 'text');
            app.ChainCodeEditField.Position = [462 331 100 22];

            % Create LoadImageButton
            app.LoadImageButton = uibutton(app.UIFigure, 'push');
            app.LoadImageButton.ButtonPushedFcn = createCallbackFcn(app, @LoadImageButtonPushed, true);
            app.LoadImageButton.Position = [56 400 100 22];
            app.LoadImageButton.Text = 'LoadImage';

            % Create ExtractFeaturesButton
            app.ExtractFeaturesButton = uibutton(app.UIFigure, 'push');
            app.ExtractFeaturesButton.ButtonPushedFcn = createCallbackFcn(app, @ExtractFeaturesButtonPushed, true);
            app.ExtractFeaturesButton.Position = [180 400 100 22];
            app.ExtractFeaturesButton.Text = 'ExtractFeatures';

            % Create ExtractChainCodeButton
            app.ExtractChainCodeButton = uibutton(app.UIFigure, 'push');
            app.ExtractChainCodeButton.ButtonPushedFcn = createCallbackFcn(app, @ExtractChainCodeButtonPushed, true);
            app.ExtractChainCodeButton.Position = [309 400 112 22];
            app.ExtractChainCodeButton.Text = 'ExtractChainCode';

            % Create SaveChainCodeButton
            app.SaveChainCodeButton = uibutton(app.UIFigure, 'push');
            app.SaveChainCodeButton.ButtonPushedFcn = createCallbackFcn(app, @SaveChainCodeButtonPushed, true);
            app.SaveChainCodeButton.Position = [461 400 102 22];
            app.SaveChainCodeButton.Text = 'SaveChainCode';

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = ChainCodeProject

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end
